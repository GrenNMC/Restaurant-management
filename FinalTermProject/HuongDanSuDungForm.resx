<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>        1. Đăng nhập để sử dụng ứng dụng (nếu chưa có tài khoản bấm vào “Tạo tài khoản?” để tạo mới tài khoản. Lưu ý: nếu muốn tạo tài khoản quản lý phải nhập Admin Key là QLNH mới có thể tạo thành công.
                (Đăng nhập bằng tài khoản Quản Lý mới có thể sử dụng tất cả chức năng. Nếu đăng nhập bằng tài khoản nhân viên thì sẽ không thể xem và quản lý danh mục Nhân Viên và không thể quản lý người dùng.)
        2. Để xem các danh mục bấm vào “Xem Danh Mục” (chỉ có thể xem không thể quản lý như thêm/xóa/sửa). Bấm “Trở Về” để đóng form Danh Mục
        3. Để quản lý danh mục (bảng) bấm vào “Quản Lý Danh Mục”
                Để thêm bấm vào nút “Thêm” sau khi điền thông tin để thêm thì bấm nút “Lưu” để chính thức thêm vào CSDL hoặc nút “Hủy Bỏ” nếu muốn hủy thao tác thêm.
                Để sửa bấm vào nút “Sửa”  sau khi điền thông tin để sửa thì bấm nút “Lưu” để chính thức sửa bản ghi trong CSDL hoặc nút “Hủy Bỏ” nếu muốn hủy thao tác sửa.
                Để xóa bấm chọn bất cứ bản ghi nào muốn xóa trên DataGridView và nhấn nút xóa.
                Lưu ý: danh mục Hóa Đơn không thể sửa thông qua phần mềm.
                Danh mục Chi Tiết Hóa Đơn không thể quản lý thông qua phần mềm .
        4. Chức năng đặt đơn:
                Để đặt đơn chọn “Ăn Tại Chỗ” hoặc “Giao Đồ Ăn” sau đó chọn nhân viên phục vụ của Hóa Đơn.
                Điền đầy đủ thông tin có dấu (*) và bấm nút “OK” mới có thể chọn món (có thể bấm nút “Reset” để xóa toàn bộ nội dung đã nhập/chọn)
                Để chọn món bấm vào nút mũi tên ở lần lượt ở các mục Sản Phẩm sau khi chọn món hãy chọn số lượng bằng cách bấm 2 nút “+” hoặc “-“ hoặc sửa đổi bằng bàn phím. Lưu ý: việc chọn món phải tuần tự ví dụ: không thể chọn món ở ô Sản Phẩm 1 rồi chọn món ở ô Sản Phẩm 4.
                Bấm nút “Đặt Đơn” sau khi đã điền đầy đủ thông tin và chọn món xong hoặc nút “Hủy Bỏ” nếu muốn dừng thao tác đặt đơn.
        5. Chức năng đặt bàn:
                Điền đầy đủ thông tin vào các ô có dấu (*) sau đó bấm nút OK. (Để chọn giờ ăn hãy điều chỉnh bằng bàn phím, định dạng ô thời gian như sau: hh:mm:ss)
                Sau khi bấm nút OK mục “Chọn Bàn” sẽ hiện ra những bàn có thể đặt.
                Sau khi điền đầy đủ thông tin bấm nút “Đặt Bàn” để tiến hành đặt bàn hoặc nút “Hủy Bỏ” để dừng thao tác đặt bàn.
        6. Quản lí người dùng (chỉ có tài khoản Quản Lý mới có thể sử dụng chức năng này và chỉ có thể quản lý các tài khoản Nhân Viên) bằng cách bấm Hệ Thống là Quản Lý Người Dùng.
        7. Để thoát chương trình bấm vào Hệ Thống là Thoát
</value>
  </data>
</root>